{"version":3,"sources":["services/quotes.ts","reducers/quoteReducer.ts","store.ts","components/BasicInfoForm.tsx","components/QuoteOverviewScreen.tsx","App.tsx","index.tsx"],"names":["baseUrl","exportedObject","createNew","content","a","axios","post","response","data","update","newObject","put","quote","quoteId","updateQuote","changedQuote","dispatch","quoteService","updatedQuote","type","createQuote","newQuote","reducer","state","action","combineReducers","quoteReducer","store","createStore","applyMiddleware","thunk","BasicInfoForm","useState","firstName","setFirstName","lastName","setLastName","addressLine1","setAddressLine1","addressLine2","setAddressLine2","addressCity","setAddressCity","addressRegion","setAddressRegion","addressPostal","setAddressPostal","first_name","last_name","address_line_1","address_line_2","address_city","address_region","address_postal","touched","setTouched","useDispatch","addQuote","event","preventDefault","Number","isInteger","parseInt","address","line_1","line_2","city","region","postal","handleTextFieldChange","target","id","value","hasError","fieldName","Box","component","sx","m","width","autoComplete","onSubmit","TextField","label","variant","required","size","error","onChange","helperText","Button","QuoteOverviewScreen","useSelector","variable_selections","deductible","setDeductible","asteroid_collision","asteroidCollision","setAsteroidCollision","handleDeductibleChange","rating_address","policy_holder","handleAsteroidCollisionChange","Select","minWidth","labelId","variable_options","values","map","i","MenuItem","premium","App","TitleContainer","styled","display","margin","paddingTop","paddingLeft","color","fontSize","TaglineContainer","alt","src","Container","disableGutters","backgroundColor","fontFamily","textAlign","padding","height","ReactDOM","render","Fragment","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b478cce4.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { QuoteObject, RatingObject } from \"../types\";\r\n\r\nconst baseUrl = \"https://fed-challenge-api.sure.now.sh/api/v1/quotes\";\r\n\r\nconst createNew = async (content: RatingObject) => {\r\n  const response = await axios.post(baseUrl, content);\r\n  return response.data;\r\n};\r\n\r\nconst update = async (newObject: QuoteObject) => {\r\n  const response = await axios.put(\r\n    `${baseUrl}/${newObject.quote.quoteId}`,\r\n    newObject\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst exportedObject = { createNew, update };\r\n\r\nexport default exportedObject;\r\n","import quoteService from \"../services/quotes\";\nimport { QuoteObject, RatingObject, ResultObject } from \"../types\";\n\nconst reducer = (state = [], action: any) => {\n  switch (action.type) {\n    case \"UPDATE_QUOTE\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport const updateQuote = (changedQuote: QuoteObject) => {\n  return async (dispatch: any) => {\n    const updatedQuote: ResultObject = await quoteService.update(changedQuote);\n    dispatch({\n      type: \"UPDATE_QUOTE\",\n      data: updatedQuote,\n    });\n  };\n};\n\nexport const createQuote = (content: RatingObject) => {\n  return async (dispatch: any) => {\n    const newQuote: ResultObject = await quoteService.createNew(content);\n    dispatch({\n      type: \"UPDATE_QUOTE\",\n      data: newQuote,\n    });\n  };\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport quoteReducer from \"./reducers/quoteReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  quote: quoteReducer,\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import { Box, Button, TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createQuote } from \"../reducers/quoteReducer\";\r\n\r\nconst BasicInfoForm = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [addressLine1, setAddressLine1] = useState(\"\");\r\n  const [addressLine2, setAddressLine2] = useState(\"\");\r\n  const [addressCity, setAddressCity] = useState(\"\");\r\n  const [addressRegion, setAddressRegion] = useState(\"\");\r\n  const [addressPostal, setAddressPostal] = useState(\"\");\r\n  const [touched, setTouched] = useState({\r\n    first_name: false,\r\n    last_name: false,\r\n    address_line_1: false,\r\n    address_line_2: false,\r\n    address_city: false,\r\n    address_region: false,\r\n    address_postal: false,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const addQuote = async (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    if (\r\n      touched[\"first_name\"] &&\r\n      touched[\"last_name\"] &&\r\n      touched[\"address_line_1\"] &&\r\n      touched[\"address_city\"] &&\r\n      touched[\"address_region\"] &&\r\n      touched[\"address_postal\"] &&\r\n      lastName &&\r\n      firstName &&\r\n      addressLine1 &&\r\n      addressCity &&\r\n      addressRegion &&\r\n      addressPostal &&\r\n      Number.isInteger(parseInt(addressPostal, 10))\r\n    ) {\r\n      const content = {\r\n        first_name: firstName,\r\n        last_name: lastName,\r\n        address: {\r\n          line_1: addressLine1,\r\n          line_2: addressLine2,\r\n          city: addressCity,\r\n          region: addressRegion,\r\n          postal: addressPostal,\r\n        },\r\n      };\r\n      dispatch(createQuote(content));\r\n    }\r\n  };\r\n\r\n  const handleTextFieldChange = (event: any) => {\r\n    if (event.target.id == \"first_name\") {\r\n      setFirstName(event.target.value);\r\n      setTouched({ ...touched, first_name: true });\r\n    }\r\n    if (event.target.id == \"last_name\") {\r\n      setLastName(event.target.value);\r\n      setTouched({ ...touched, last_name: true });\r\n    }\r\n    if (event.target.id == \"address_line_1\") {\r\n      setAddressLine1(event.target.value);\r\n      setTouched({ ...touched, address_line_1: true });\r\n    }\r\n    if (event.target.id == \"address_line_2\") {\r\n      setAddressLine2(event.target.value);\r\n      setTouched({ ...touched, address_line_2: true });\r\n    }\r\n    if (event.target.id == \"address_city\") {\r\n      setAddressCity(event.target.value);\r\n      setTouched({ ...touched, address_city: true });\r\n    }\r\n    if (event.target.id == \"address_region\") {\r\n      setAddressRegion(event.target.value);\r\n      setTouched({ ...touched, address_region: true });\r\n    }\r\n    if (event.target.id == \"address_postal\") {\r\n      setAddressPostal(event.target.value);\r\n      setTouched({ ...touched, address_postal: true });\r\n    }\r\n  };\r\n\r\n  const hasError = (fieldName: string) => {\r\n    if (fieldName == \"first_name\") return touched[\"first_name\"] && !firstName;\r\n    if (fieldName == \"last_name\") return touched[\"last_name\"] && !lastName;\r\n    if (fieldName == \"address_line_1\")\r\n      return touched[\"address_line_1\"] && !addressLine1;\r\n    if (fieldName == \"address_line_2\")\r\n      return touched[\"address_line_2\"] && !addressLine2;\r\n    if (fieldName == \"address_city\")\r\n      return touched[\"address_city\"] && !addressCity;\r\n    if (fieldName == \"address_region\")\r\n      return touched[\"address_region\"] && !addressRegion;\r\n    if (fieldName == \"address_postal\")\r\n      return (\r\n        touched[\"address_postal\"] &&\r\n        !Number.isInteger(parseInt(addressPostal, 10))\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Rating Information</h2>\r\n      <p>\r\n        Sure can provide you a quote in seconds just fill out the following\r\n        information to get started.\r\n      </p>\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\r\n        }}\r\n        autoComplete=\"off\"\r\n        onSubmit={addQuote}\r\n      >\r\n        <div>\r\n          <div>\r\n            <TextField\r\n              id=\"first_name\"\r\n              label=\"First Name\"\r\n              variant=\"outlined\"\r\n              required\r\n              size=\"small\"\r\n              error={hasError(\"first_name\")}\r\n              onChange={handleTextFieldChange}\r\n              helperText={hasError(\"first_name\") && \"First Name is Required\"}\r\n            />\r\n            <TextField\r\n              id=\"last_name\"\r\n              label=\"Last Name\"\r\n              variant=\"outlined\"\r\n              required\r\n              size=\"small\"\r\n              error={hasError(\"last_name\")}\r\n              onChange={handleTextFieldChange}\r\n              helperText={hasError(\"last_name\") && \"Last Name is Required\"}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"address_line_1\"\r\n              label=\"Address Line 1\"\r\n              variant=\"outlined\"\r\n              required\r\n              size=\"small\"\r\n              error={hasError(\"address_line_1\")}\r\n              onChange={handleTextFieldChange}\r\n              helperText={hasError(\"address_line_1\") && \"Address is Required\"}\r\n            />\r\n            <TextField\r\n              id=\"address_line_2\"\r\n              label=\"Address Line 2\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onChange={handleTextFieldChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"address_city\"\r\n              label=\"City\"\r\n              variant=\"outlined\"\r\n              required\r\n              size=\"small\"\r\n              error={hasError(\"address_city\")}\r\n              onChange={handleTextFieldChange}\r\n              helperText={hasError(\"address_city\") && \"City is Required\"}\r\n            />\r\n            <TextField\r\n              id=\"address_region\"\r\n              label=\"State\"\r\n              variant=\"outlined\"\r\n              required\r\n              size=\"small\"\r\n              error={hasError(\"address_region\")}\r\n              onChange={handleTextFieldChange}\r\n              helperText={hasError(\"address_region\") && \"State is Required\"}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"address_postal\"\r\n              label=\"Zip Code\"\r\n              variant=\"outlined\"\r\n              required\r\n              size=\"small\"\r\n              error={hasError(\"address_postal\")}\r\n              onChange={handleTextFieldChange}\r\n              helperText={\r\n                hasError(\"address_postal\") &&\r\n                \"Zip Code is Required and Must be a Number\"\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\" variant=\"contained\">\r\n          Submit\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicInfoForm;\r\n","import { Box, MenuItem, Select, SelectChangeEvent } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateQuote } from \"../reducers/quoteReducer\";\r\n\r\nconst QuoteOverviewScreen = () => {\r\n  const quote = useSelector<any, any>((state) => state.quote);\r\n  const dispatch = useDispatch();\r\n  const [deductible, setDeductible] = useState(\r\n    quote.quote.variable_selections.deductible\r\n  );\r\n  const [asteroidCollision, setAsteroidCollision] = useState(\r\n    quote.quote.variable_selections.asteroid_collision\r\n  );\r\n\r\n  const handleDeductibleChange = async (event: SelectChangeEvent) => {\r\n    setDeductible(parseInt(event.target.value as string, 10));\r\n    const content = {\r\n      quote: {\r\n        quoteId: quote.quote.quoteId,\r\n        rating_address: quote.quote.rating_address,\r\n        policy_holder: quote.quote.policy_holder,\r\n        variable_selections: {\r\n          deductible: parseInt(event.target.value),\r\n          asteroid_collision:\r\n            quote.quote.variable_selections.asteroid_collision,\r\n        },\r\n      },\r\n    };\r\n    dispatch(updateQuote(content));\r\n  };\r\n\r\n  const handleAsteroidCollisionChange = async (event: SelectChangeEvent) => {\r\n    setAsteroidCollision(parseInt(event.target.value as string, 10));\r\n    const content = {\r\n      quote: {\r\n        quoteId: quote.quote.quoteId,\r\n        rating_address: quote.quote.rating_address,\r\n        policy_holder: quote.quote.policy_holder,\r\n        variable_selections: {\r\n          deductible: quote.quote.variable_selections.deductible,\r\n          asteroid_collision: parseInt(event.target.value),\r\n        },\r\n      },\r\n    };\r\n    dispatch(updateQuote(content));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Quote Overview</h2>\r\n      <p>Select your coverage limits.</p>\r\n\r\n      <div>\r\n        <Box>\r\n          Deductible\r\n          <Select\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n            }}\r\n            labelId=\"deductible\"\r\n            id=\"deductible\"\r\n            size=\"small\"\r\n            value={deductible}\r\n            onChange={handleDeductibleChange}\r\n          >\r\n            {quote.quote.variable_options.deductible.values.map(\r\n              (value: string, i: number) => (\r\n                <MenuItem key={i} value={value}>\r\n                  ${value}\r\n                </MenuItem>\r\n              )\r\n            )}\r\n          </Select>\r\n          <br />\r\n          Asteroid Collision\r\n          <Select\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n            }}\r\n            labelId=\"asteroid_collision\"\r\n            id=\"asteroid_collision\"\r\n            size=\"small\"\r\n            value={asteroidCollision}\r\n            onChange={handleAsteroidCollisionChange}\r\n          >\r\n            {quote.quote.variable_options.asteroid_collision.values.map(\r\n              (value: string, i: number) => (\r\n                <MenuItem key={i} value={value}>\r\n                  ${value}\r\n                </MenuItem>\r\n              )\r\n            )}\r\n          </Select>\r\n          <br />\r\n          <Box\r\n            sx={{\r\n              m: 1,\r\n              minWidth: 120,\r\n            }}\r\n          >\r\n            Annual Premium: ${quote.quote.premium}\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteOverviewScreen;\r\n","import React from \"react\";\nimport BasicInfoForm from \"./components/BasicInfoForm\";\nimport QuoteOverviewScreen from \"./components/QuoteOverviewScreen\";\nimport { useSelector } from \"react-redux\";\nimport Container from \"@mui/material/Container\";\nimport { styled } from \"@mui/material/styles\";\n\nconst App = () => {\n  const quote = useSelector<any, any>((state) => state.quote);\n\n  const TitleContainer = styled(\"span\")({\n    display: \"block\",\n    margin: \"auto\",\n    paddingTop: 30,\n    paddingLeft: 30,\n    color: \"white\",\n    fontSize: 30,\n  });\n\n  const TaglineContainer = styled(\"span\")({\n    display: \"block\",\n    margin: \"auto\",\n    paddingLeft: 80,\n    color: \"white\",\n    fontSize: 30,\n  });\n\n  return (\n    <div>\n      <TitleContainer>\n        <img alt=\"sure logo\" src=\"images/sure_white.svg\" />\n        <TaglineContainer>\n          <h2>\n            Insure your Rocket with Sure{\" \"}\n            <img width=\"40\" alt=\"rocket\" src=\"images/rocket.svg\" />\n          </h2>\n        </TaglineContainer>\n      </TitleContainer>\n      <Container\n        disableGutters\n        sx={{\n          backgroundColor: \"white\",\n          fontFamily: \"arial\",\n          textAlign: \"center\",\n          padding: 1,\n          height: \"100vh\",\n        }}\n      >\n        {!quote || !quote.quote ? <BasicInfoForm /> : <QuoteOverviewScreen />}\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nReactDOM.render(\n  <React.Fragment>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}