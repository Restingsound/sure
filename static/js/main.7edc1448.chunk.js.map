{"version":3,"sources":["services/quotes.ts","reducers/quoteReducer.ts","store.ts","components/BasicInfoForm.tsx","components/QuoteOverviewScreen.tsx","App.tsx","index.tsx"],"names":["baseUrl","exportedObject","createNew","content","a","axios","post","response","data","update","newObject","put","quote","quoteId","updateQuote","changedQuote","dispatch","quoteService","updatedQuote","type","createQuote","newQuote","reducer","state","action","combineReducers","quoteReducer","store","createStore","applyMiddleware","thunk","BasicInfoForm","useState","firstName","setFirstName","lastName","setLastName","addressLine1","setAddressLine1","addressLine2","setAddressLine2","addressCity","setAddressCity","addressRegion","setAddressRegion","addressPostal","setAddressPostal","first_name","last_name","address_line_1","address_line_2","address_city","address_region","address_postal","touched","setTouched","useDispatch","addQuote","event","preventDefault","Number","isInteger","parseInt","address","line_1","line_2","city","region","postal","handleTextFieldChange","target","id","value","hasError","fieldName","Box","component","sx","m","width","autoComplete","onSubmit","TextField","label","variant","required","size","error","onChange","helperText","Button","QuoteOverviewScreen","useSelector","variable_selections","deductible","setDeductible","asteroid_collision","asteroidCollision","setAsteroidCollision","handleDeductibleChange","rating_address","policy_holder","handleAsteroidCollisionChange","Select","minWidth","labelId","variable_options","values","map","i","MenuItem","premium","App","TitleContainer","styled","display","margin","paddingTop","paddingLeft","color","fontSize","TaglineContainer","style","position","left","right","top","bottom","overflow","alt","src","Container","disableGutters","backgroundColor","fontFamily","textAlign","padding","height","scrolling","frameBorder","title","ReactDOM","render","Fragment","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.7edc1448.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { QuoteObject, RatingObject } from \"../types\";\n\nconst baseUrl = \"https://fed-challenge-api.sure.now.sh/api/v1/quotes\";\n\nconst createNew = async (content: RatingObject) => {\n  const response = await axios.post(baseUrl, content);\n  return response.data;\n};\n\nconst update = async (newObject: QuoteObject) => {\n  const response = await axios.put(\n    `${baseUrl}/${newObject.quote.quoteId}`,\n    newObject\n  );\n  return response.data;\n};\n\nconst exportedObject = { createNew, update };\n\nexport default exportedObject;\n","import quoteService from \"../services/quotes\";\nimport { QuoteObject, RatingObject, ResultObject } from \"../types\";\n\nconst reducer = (state = [], action: any) => {\n  switch (action.type) {\n    case \"UPDATE_QUOTE\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport const updateQuote = (changedQuote: QuoteObject) => {\n  return async (dispatch: any) => {\n    const updatedQuote: ResultObject = await quoteService.update(changedQuote);\n    dispatch({\n      type: \"UPDATE_QUOTE\",\n      data: updatedQuote,\n    });\n  };\n};\n\nexport const createQuote = (content: RatingObject) => {\n  return async (dispatch: any) => {\n    const newQuote: ResultObject = await quoteService.createNew(content);\n    dispatch({\n      type: \"UPDATE_QUOTE\",\n      data: newQuote,\n    });\n  };\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport quoteReducer from \"./reducers/quoteReducer\";\n\nconst reducer = combineReducers({\n  quote: quoteReducer,\n});\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import { Box, Button, TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createQuote } from \"../reducers/quoteReducer\";\n\nconst BasicInfoForm = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [addressLine1, setAddressLine1] = useState(\"\");\n  const [addressLine2, setAddressLine2] = useState(\"\");\n  const [addressCity, setAddressCity] = useState(\"\");\n  const [addressRegion, setAddressRegion] = useState(\"\");\n  const [addressPostal, setAddressPostal] = useState(\"\");\n  const [touched, setTouched] = useState({\n    first_name: false,\n    last_name: false,\n    address_line_1: false,\n    address_line_2: false,\n    address_city: false,\n    address_region: false,\n    address_postal: false,\n  });\n\n  const dispatch = useDispatch();\n  const addQuote = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (\n      touched[\"first_name\"] &&\n      touched[\"last_name\"] &&\n      touched[\"address_line_1\"] &&\n      touched[\"address_city\"] &&\n      touched[\"address_region\"] &&\n      touched[\"address_postal\"] &&\n      lastName &&\n      firstName &&\n      addressLine1 &&\n      addressCity &&\n      addressRegion &&\n      addressPostal &&\n      Number.isInteger(parseInt(addressPostal, 10))\n    ) {\n      const content = {\n        first_name: firstName,\n        last_name: lastName,\n        address: {\n          line_1: addressLine1,\n          line_2: addressLine2,\n          city: addressCity,\n          region: addressRegion,\n          postal: addressPostal,\n        },\n      };\n      dispatch(createQuote(content));\n    }\n  };\n\n  const handleTextFieldChange = (event: any) => {\n    if (event.target.id === \"first_name\") {\n      setFirstName(event.target.value);\n      setTouched({ ...touched, first_name: true });\n    }\n    if (event.target.id === \"last_name\") {\n      setLastName(event.target.value);\n      setTouched({ ...touched, last_name: true });\n    }\n    if (event.target.id === \"address_line_1\") {\n      setAddressLine1(event.target.value);\n      setTouched({ ...touched, address_line_1: true });\n    }\n    if (event.target.id === \"address_line_2\") {\n      setAddressLine2(event.target.value);\n      setTouched({ ...touched, address_line_2: true });\n    }\n    if (event.target.id === \"address_city\") {\n      setAddressCity(event.target.value);\n      setTouched({ ...touched, address_city: true });\n    }\n    if (event.target.id === \"address_region\") {\n      setAddressRegion(event.target.value);\n      setTouched({ ...touched, address_region: true });\n    }\n    if (event.target.id === \"address_postal\") {\n      setAddressPostal(event.target.value);\n      setTouched({ ...touched, address_postal: true });\n    }\n  };\n\n  const hasError = (fieldName: string) => {\n    if (fieldName === \"first_name\") return touched[\"first_name\"] && !firstName;\n    if (fieldName === \"last_name\") return touched[\"last_name\"] && !lastName;\n    if (fieldName === \"address_line_1\")\n      return touched[\"address_line_1\"] && !addressLine1;\n    if (fieldName === \"address_line_2\")\n      return touched[\"address_line_2\"] && !addressLine2;\n    if (fieldName === \"address_city\")\n      return touched[\"address_city\"] && !addressCity;\n    if (fieldName === \"address_region\")\n      return touched[\"address_region\"] && !addressRegion;\n    if (fieldName === \"address_postal\")\n      return (\n        touched[\"address_postal\"] &&\n        !Number.isInteger(parseInt(addressPostal, 10))\n      );\n  };\n\n  return (\n    <div>\n      <h2>Rating Information 8</h2>\n      <p>\n        Sure can provide you a quote in seconds just fill out the following\n        information to get started.\n      </p>\n      <Box\n        component=\"form\"\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n        }}\n        autoComplete=\"off\"\n        onSubmit={addQuote}\n      >\n        <div>\n          <div>\n            <TextField\n              id=\"first_name\"\n              label=\"First Name\"\n              variant=\"outlined\"\n              required\n              size=\"small\"\n              error={hasError(\"first_name\")}\n              onChange={handleTextFieldChange}\n              helperText={hasError(\"first_name\") && \"First Name is Required\"}\n            />\n            <TextField\n              id=\"last_name\"\n              label=\"Last Name\"\n              variant=\"outlined\"\n              required\n              size=\"small\"\n              error={hasError(\"last_name\")}\n              onChange={handleTextFieldChange}\n              helperText={hasError(\"last_name\") && \"Last Name is Required\"}\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"address_line_1\"\n              label=\"Address Line 1\"\n              variant=\"outlined\"\n              required\n              size=\"small\"\n              error={hasError(\"address_line_1\")}\n              onChange={handleTextFieldChange}\n              helperText={hasError(\"address_line_1\") && \"Address is Required\"}\n            />\n            <TextField\n              id=\"address_line_2\"\n              label=\"Address Line 2\"\n              variant=\"outlined\"\n              size=\"small\"\n              onChange={handleTextFieldChange}\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"address_city\"\n              label=\"City\"\n              variant=\"outlined\"\n              required\n              size=\"small\"\n              error={hasError(\"address_city\")}\n              onChange={handleTextFieldChange}\n              helperText={hasError(\"address_city\") && \"City is Required\"}\n            />\n            <TextField\n              id=\"address_region\"\n              label=\"State\"\n              variant=\"outlined\"\n              required\n              size=\"small\"\n              error={hasError(\"address_region\")}\n              onChange={handleTextFieldChange}\n              helperText={hasError(\"address_region\") && \"State is Required\"}\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"address_postal\"\n              label=\"Zip Code\"\n              variant=\"outlined\"\n              required\n              size=\"small\"\n              error={hasError(\"address_postal\")}\n              onChange={handleTextFieldChange}\n              helperText={\n                hasError(\"address_postal\") &&\n                \"Zip Code is Required and Must be a Number\"\n              }\n            />\n          </div>\n        </div>\n        <Button type=\"submit\" variant=\"contained\">\n          Submit\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default BasicInfoForm;\n","import { Box, MenuItem, Select, SelectChangeEvent } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateQuote } from \"../reducers/quoteReducer\";\n\nconst QuoteOverviewScreen = () => {\n  const quote = useSelector<any, any>((state) => state.quote);\n  const dispatch = useDispatch();\n  const [deductible, setDeductible] = useState(\n    quote.quote.variable_selections.deductible\n  );\n  const [asteroidCollision, setAsteroidCollision] = useState(\n    quote.quote.variable_selections.asteroid_collision\n  );\n\n  const handleDeductibleChange = async (event: SelectChangeEvent) => {\n    setDeductible(parseInt(event.target.value as string, 10));\n    const content = {\n      quote: {\n        quoteId: quote.quote.quoteId,\n        rating_address: quote.quote.rating_address,\n        policy_holder: quote.quote.policy_holder,\n        variable_selections: {\n          deductible: parseInt(event.target.value),\n          asteroid_collision:\n            quote.quote.variable_selections.asteroid_collision,\n        },\n      },\n    };\n    dispatch(updateQuote(content));\n  };\n\n  const handleAsteroidCollisionChange = async (event: SelectChangeEvent) => {\n    setAsteroidCollision(parseInt(event.target.value as string, 10));\n    const content = {\n      quote: {\n        quoteId: quote.quote.quoteId,\n        rating_address: quote.quote.rating_address,\n        policy_holder: quote.quote.policy_holder,\n        variable_selections: {\n          deductible: quote.quote.variable_selections.deductible,\n          asteroid_collision: parseInt(event.target.value),\n        },\n      },\n    };\n    dispatch(updateQuote(content));\n  };\n\n  return (\n    <div>\n      <h2>Quote Overview</h2>\n      <p>Select your coverage limits.</p>\n\n      <div>\n        <Box>\n          Deductible\n          <Select\n            sx={{\n              m: 1,\n              minWidth: 120,\n            }}\n            labelId=\"deductible\"\n            id=\"deductible\"\n            size=\"small\"\n            value={deductible}\n            onChange={handleDeductibleChange}\n          >\n            {quote.quote.variable_options.deductible.values.map(\n              (value: string, i: number) => (\n                <MenuItem key={i} value={value}>\n                  ${value}\n                </MenuItem>\n              )\n            )}\n          </Select>\n          <br />\n          Asteroid Collision\n          <Select\n            sx={{\n              m: 1,\n              minWidth: 120,\n            }}\n            labelId=\"asteroid_collision\"\n            id=\"asteroid_collision\"\n            size=\"small\"\n            value={asteroidCollision}\n            onChange={handleAsteroidCollisionChange}\n          >\n            {quote.quote.variable_options.asteroid_collision.values.map(\n              (value: string, i: number) => (\n                <MenuItem key={i} value={value}>\n                  ${value}\n                </MenuItem>\n              )\n            )}\n          </Select>\n          <br />\n          <Box\n            sx={{\n              m: 1,\n              minWidth: 120,\n            }}\n          >\n            Annual Premium: ${quote.quote.premium}\n          </Box>\n        </Box>\n      </div>\n    </div>\n  );\n};\n\nexport default QuoteOverviewScreen;\n","import React from \"react\";\nimport BasicInfoForm from \"./components/BasicInfoForm\";\nimport QuoteOverviewScreen from \"./components/QuoteOverviewScreen\";\nimport { useSelector } from \"react-redux\";\nimport Container from \"@mui/material/Container\";\nimport { styled } from \"@mui/material/styles\";\n\nconst App = () => {\n  const quote = useSelector<any, any>((state) => state.quote);\n\n  const TitleContainer = styled(\"span\")({\n    display: \"block\",\n    margin: \"auto\",\n    paddingTop: 30,\n    paddingLeft: 30,\n    color: \"white\",\n    fontSize: 30,\n  });\n\n  const TaglineContainer = styled(\"span\")({\n    display: \"block\",\n    margin: \"auto\",\n    paddingLeft: 80,\n    color: \"white\",\n    fontSize: 30,\n  });\n\n  return (\n    <div>\n      <div\n        style={{\n          position: \"absolute\",\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          overflow: \"auto\",\n        }}\n      >\n        <TitleContainer>\n          <img alt=\"sure logo\" src=\"sure/images/sure_white.svg\" />\n          <TaglineContainer>\n            <h2>\n              Insure your Rocket with Sure{\" \"}\n              <img width=\"40\" alt=\"rocket\" src=\"sure/images/rocket.svg\" />\n            </h2>\n          </TaglineContainer>\n        </TitleContainer>\n        <Container\n          disableGutters\n          sx={{\n            backgroundColor: \"white\",\n            fontFamily: \"arial\",\n            textAlign: \"center\",\n            padding: 1,\n            height: \"100vh\",\n          }}\n        >\n          {!quote || !quote.quote ? <BasicInfoForm /> : <QuoteOverviewScreen />}\n        </Container>\n      </div>\n      <iframe\n        src=\"test.html\"\n        style={{\n          position: \"absolute\",\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n        }}\n        scrolling=\"no\"\n        frameBorder=\"0px\"\n        title=\"test\"\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nReactDOM.render(\n  <React.Fragment>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}